<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Cocos Creator3.x学习制作FlappyBird小游戏</title>
    <link href="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <url>/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>此文章是本人第一次学习CocosCreator所记录的心得体会，写下此文章的目的有两个：</p><ol><li>增强学习过程的记忆</li><li>记录一下关键点，供后续查阅，也想和刚学习的小伙伴一起研究探讨</li></ol><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li><p>游戏开发工具：Cocos Creator 3.8.3</p></li><li><p>脚本代码编辑工具：VSCode</p></li><li><p>练习用的游戏资源下载：链接：<a href="https://pan.baidu.com/s/1_OaseAbmoHbKiRbxBWfD6g">https://pan.baidu.com/s/1_OaseAbmoHbKiRbxBWfD6g</a>  提取码：l2sa</p></li></ul><h2 id="学习过程"><a href="#学习过程" class="headerlink" title="学习过程"></a>学习过程</h2><h3 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h3><h4 id="1、使用CocosCreator创建一个Empty2D项目"><a href="#1、使用CocosCreator创建一个Empty2D项目" class="headerlink" title="1、使用CocosCreator创建一个Empty2D项目"></a>1、使用CocosCreator创建一个Empty2D项目</h4><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/11.PNG" class=""><h4 id="2、在assets文件夹下创建文件夹"><a href="#2、在assets文件夹下创建文件夹" class="headerlink" title="2、在assets文件夹下创建文件夹"></a>2、在assets文件夹下创建文件夹</h4><ul><li>scene：场景存放</li><li>animation：动画存放</li><li>images：图片资源存放</li><li>prefab：预制体存放</li><li>scripts：脚本代码存放</li></ul><p>文件夹创建完成后按下Ctrl+s进行保存，保存在assets&#x2F;scene文件夹下，文件取名为game（可根据实际随意）</p><h4 id="3、导入图片资源"><a href="#3、导入图片资源" class="headerlink" title="3、导入图片资源"></a>3、导入图片资源</h4><p>将上述网盘中的图片资源导入，在assets&#x2F;images上右键导入新文件，选中后缀为png的图片导入即可</p><p>结果图：</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/12.PNG" class=""><h3 id="二、小鸟创建"><a href="#二、小鸟创建" class="headerlink" title="二、小鸟创建"></a>二、小鸟创建</h3><h4 id="1、在Canvas下创建Sprite节点，重命名为Bird，用作小鸟节点"><a href="#1、在Canvas下创建Sprite节点，重命名为Bird，用作小鸟节点" class="headerlink" title="1、在Canvas下创建Sprite节点，重命名为Bird，用作小鸟节点"></a>1、在Canvas下创建Sprite节点，重命名为Bird，用作小鸟节点</h4><p>（刚开始学习有点疑惑，什么时候用空节点，什么时候用Sprite，后来在文档中看到了组件的概念，发现两者的区别仅仅是：Sprite节点在空节点上自动添加了Sprite组件而已）。</p><p>将assets&#x2F;images下的bird1图片拖动到Bird节点的SpriteFrame上，就会展示小鸟的样子了。</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/3.PNG" class=""><h4 id="2、接下来让小鸟动起来"><a href="#2、接下来让小鸟动起来" class="headerlink" title="2、接下来让小鸟动起来"></a>2、接下来让小鸟动起来</h4><p>在assets&#x2F;animation文件夹下创建动画剪辑（Animation Clip），重命名为birdAnimation，将birdAnimation拖到Bird节点的属性检查器面板，会自动添加上Animation组件</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/4.PNG" class=""><h4 id="3、动画编辑"><a href="#3、动画编辑" class="headerlink" title="3、动画编辑"></a>3、动画编辑</h4><p>选中Bird，进入动画编辑器</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/5.PNG" class=""><p>在属性列表添加SpriteFrame，选中assets&#x2F;images下的bird1、bird2、bird3三张图片，一起拖动到动画编辑器的关键帧上。</p><p>分别调整三个小鸟到0、10、20位置（数字表示时间间隔），在第30的位置复制第一张bird1图片（小鸟飞是一个循环动画的过程，形成闭环后动画更加自然）</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/6.PNG" class=""><p>最后勾上加载后播放，循环模式选择循环播放，保存动画，保存场景后预览，小鸟就会一直飞</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/7.PNG" class=""><h3 id="三、背景创建"><a href="#三、背景创建" class="headerlink" title="三、背景创建"></a>三、背景创建</h3><h4 id="1、设计尺寸"><a href="#1、设计尺寸" class="headerlink" title="1、设计尺寸"></a>1、设计尺寸</h4><p>在项目设置中修改设计尺寸，设计宽度288，设计高度512（也可自行设定其他尺寸），目前对于设计尺寸的认知是游戏制作时设定一个分辨率用于各种资源的布局，后续发布时会以设计尺寸去适配各种不同的屏幕尺寸。</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/8.PNG" class=""><h4 id="2、背景图创建"><a href="#2、背景图创建" class="headerlink" title="2、背景图创建"></a>2、背景图创建</h4><p>在Canvas下创建一个Sprite节点，重命名为Bg，拖动assets&#x2F;images下的background图片至Bg节点的SpriteFrame，</p><p>并调整ContentSize为288，512，Position为0，0（此时小鸟看不见了，因为渲染的顺序时自上而下，所以拖动调整Bg节点至Bird节点上方，先渲染背景图，再渲染小鸟）</p><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/9.PNG" class=""><h4 id="3、小鸟前进？背景图后退"><a href="#3、小鸟前进？背景图后退" class="headerlink" title="3、小鸟前进？背景图后退"></a>3、小鸟前进？背景图后退</h4><p>在assets&#x2F;scripts下创建一个MainController.ts脚本，并将MainController添加到Canvas上，思路：背景图创建两个一摸一样的节点，区别是一个x坐标为0，另一个为288。</p><p>将两个背景节点赋值给脚本，在脚本的update中每次x坐标都减少1个像素，形成向左移动的效果，当左边背景图移出画面（x坐标&lt;&#x3D;-288）时马上从左边移动到最右边（x坐标变成288），以此往复循环</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; _decorator, <span class="hljs-title class_">BoxCollider2D</span>, <span class="hljs-title class_">Button</span>, <span class="hljs-title class_">Collider2D</span>, <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">Director</span>, director, <span class="hljs-title class_">EventTouch</span>, instantiate, <span class="hljs-title class_">Label</span>, log, <span class="hljs-title class_">Node</span>, <span class="hljs-title class_">Prefab</span>, <span class="hljs-title class_">Quat</span>, <span class="hljs-title class_">Sprite</span>, <span class="hljs-title class_">Vec3</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cc&#x27;</span>;<br><span class="hljs-keyword">const</span> &#123; ccclass, property &#125; = _decorator;<br><br><span class="hljs-meta">@ccclass</span>(<span class="hljs-string">&#x27;MainController&#x27;</span>)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Component</span> &#123;<br>    <span class="hljs-meta">@property</span>(<span class="hljs-title class_">Label</span>)<br>    <span class="hljs-attr">label</span>: <span class="hljs-title class_">Label</span> = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-meta">@property</span>(<span class="hljs-title class_">Sprite</span>)<br>    <span class="hljs-title class_">SpBg</span>: <span class="hljs-title class_">Sprite</span>[] = [<span class="hljs-literal">null</span>, <span class="hljs-literal">null</span>];<br><br>    <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>    &#125;<br><br>    <span class="hljs-title function_">update</span>(<span class="hljs-params">deltaTime: <span class="hljs-built_in">number</span></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br>            <span class="hljs-keyword">var</span> pos = <span class="hljs-variable language_">this</span>.<span class="hljs-property">SpBg</span>[i].<span class="hljs-property">node</span>.<span class="hljs-title function_">getPosition</span>();<br>            pos.<span class="hljs-property">x</span> -= <span class="hljs-number">1.0</span>;<br>            <span class="hljs-keyword">if</span> (pos.<span class="hljs-property">x</span> &lt;= -<span class="hljs-number">288</span>) &#123;<br>                pos.<span class="hljs-property">x</span> = <span class="hljs-number">288</span>;<br>            &#125;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">SpBg</span>[i].<span class="hljs-property">node</span>.<span class="hljs-title function_">setPosition</span>(pos)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/2024/07/08/Cocos-Creator3-x%E5%AD%A6%E4%B9%A0%E5%88%B6%E4%BD%9CFlappyBird%E5%B0%8F%E6%B8%B8%E6%88%8F/10.PNG" class="">]]></content>
    
    
    
    <tags>
      
      <tag>CocosCreator3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="/2024/07/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2024/07/02/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>今天搭建了一个个人博客，用于总结自己的学习过程，和分享一些心得体会，希望能越来越好~</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
